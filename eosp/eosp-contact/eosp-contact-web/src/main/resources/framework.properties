#静态资源访问路径
static.web.path = http://124.161.16.164:905/wsbp-web

#文件上传存储根目录
upload.file.root.directory=${webapp.root}/filetest

auto.run.sql.script=true

#-----------------文件上传配置-----------
#指定全局文件上传实现类
FileServiceImpl=com.wisesoft.ext.file.impl.LocalFileService
#本地文件存储参数
#------------------------------------

#-----------------缓存配置--------------
#缓存名称
cacheName=framework-test_cache

#本地缓存实现
#local.cacheManager=com.wisesoft.cache.ehcache.EhcacheManager
#local.cacheManager=com.wisesoft.cache.redis.RedisClusterManager
local.cacheManager=com.wisesoft.cache.memory.MemoryCacheManager
#ehcache 配置
ehcache.isflush=false

#集中缓存实现
#Centralized.cacheManager=com.wisesoft.cache.ehcache.EhcacheManager
#Centralized.cacheManager=com.wisesoft.cache.redis.RedisClusterManager
Centralized.cacheManager=com.wisesoft.cache.memory.MemoryCacheManager

#redis 配置
runmodel=debug
redis.host = 172.16.9.30,172.16.9.31,172.16.9.31
redis.port = 27100,27101,27102
redis.timeout = 2000
redis.password = 123456
redis.database=0
redis.mastername = redismaster
redis.runmodel=cluster
redis.maxTotal = -1
redis.maxIdle = 2000
redis.maxWaitMillis = 100
redis.minEvictableIdleTimeMillis = 864000000
redis.minIdle = 10
redis.numTestsPerEvictionRun = 10
redis.lifo = false
redis.softMinEvictableIdleTimeMillis = 10
redis.testOnBorrow = true
redis.testOnReturn = false
redis.testWhileIdle = false
redis.timeBetweenEvictionRunsMillis = 300000
redis.blockWhenExhausted = true
#------------------------------------


#-----------------数据库配置------------
#配置初始化大小、最小、最大 
common-jdbc.druidDataSource.value.initialSize=1
common-jdbc.druidDataSource.value.minIdle=1
common-jdbc.druidDataSource.value.maxActive=20

#配置获取连接等待超时的时间 
common-jdbc.druidDataSource.value.maxWait=60000

#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
common-jdbc.druidDataSource.value.druidDataSource.value.timeBetweenEvictionRunsMillis=60000

#配置一个连接在池中最小生存的时间，单位是毫秒
common-jdbc.druidDataSource.value.minEvictableIdleTimeMillis=300000

common-jdbc.druidDataSource.value.validationQuery=select 1 from dual
common-jdbc.druidDataSource.value.testWhileIdle=true
common-jdbc.druidDataSource.value.testOnBorrow=false
common-jdbc.druidDataSource.value.testOnReturn=false

common-jdbc.druidDataSource.value.connectionProperties=druid.stat.mergeSql=true
common-jdbc.druidDataSource.value.useGlobalDataSourceStat=true
#打开PSCache，并且指定每个连接上PSCache的大小
common-jdbc.druidDataSource.value.poolPreparedStatements=true
common-jdbc.druidDataSource.value.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters
common-jdbc.druidDataSource.value.filters=stat
common-jdbc.druidDataSource.xml.proxyFilters=<list><ref bean="log-filter"/></list>

common-jdbc.jta_dataSource.value.maxPoolSize=100
common-jdbc.jta_dataSource.value.borrowConnectionTimeout=60
common-jdbc.jta_dataSource.value.reapTimeout=20
common-jdbc.jta_dataSource.value.maxIdleTime=60
common-jdbc.jta_dataSource.value.maintenanceInterval=60
common-jdbc.jta_dataSource.value.loginTimeout=60
common-jdbc.jta_dataSource.value.logWriter=60
common-jdbc.jta_dataSource.value.testQuery=select 1 from dual

common-jdbc.ModelManager.ref.jtaTxManager=JtaTransactionManager
common-jdbc.ModelManager.value.loadTableModel=true

#jta事务配置
com.atomikos.icatch.service=com.atomikos.icatch.standalone.UserTransactionServiceFactory
com.atomikos.icatch.log_base_name=framework-test
com.atomikos.icatch.output_dir=${webapp.root}/WEB-INF/log/jta/
com.atomikos.icatch.log_base_dir=${webapp.root}/WEB-INF/log/jta/
#------------------------------------