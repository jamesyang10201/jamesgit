<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/mvc  
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 开启controller注解支持 -->
	<context:component-scan base-package="com.wisesoft" />

	<!-- 指定自己定义的validator -->
	<mvc:annotation-driven validator="validator">
		<mvc:argument-resolvers>
        	<bean class="com.wisesoft.web.spring.bind.DataBindMethodProcessor" />
			<bean class="com.wisesoft.web.spring.bind.JsonParamMethodArgumentResolver" />
    	</mvc:argument-resolvers>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- 配置Fastjson支持 -->
			<bean class="com.wisesoft.web.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
		            <list>
		               <!-- 输出key时是否使用双引号 -->
		               <value>QuoteFieldNames</value>
		               <!-- 是否输出值为null的字段 -->
		               <value>WriteMapNullValue</value>
		               <!-- 数值字段如果为null,输出为0,而非null -->
		               <value>WriteNullNumberAsZero</value>
		               <!-- List字段如果为null,输出为[],而非null -->
		               <value>WriteNullListAsEmpty</value>
		               <!-- 字符类型字段如果为null,输出为"",而非null -->
		               <value>WriteNullStringAsEmpty</value>
		               <!-- Boolean字段如果为null,输出为false,而非null -->
		               <value>WriteNullBooleanAsFalse</value>
		               <!-- null String不输出  -->
		               <value>WriteNullStringAsEmpty</value>
		               <!-- null String也要输出  -->
		               <!-- <value>WriteMapNullValue</value> -->
		               <!-- Date的日期转换器 -->
		               <value>WriteDateUseDateFormat</value>
		            </list>
		         </property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:default-servlet-handler />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.wisesoft.web.spring.RequestTimeInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 静态文件目录,增强网站访问速度 -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000" />
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
	    <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
	    <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
	    <property name="validationMessageSource" ref="messageSource"/>
	</bean>
	 
	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basenames">
	        <list>
	            <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
	            <value>classpath:messages</value>
	            <value>classpath:org/hibernate/validator/ValidationMessages</value>
	        </list>
	    </property>
	    <property name="useCodeAsDefaultMessage" value="false"/>
	    <property name="defaultEncoding" value="UTF-8"/>
	    <property name="cacheSeconds" value="60"/>
	</bean>
	
	
	<!-- 文件上传处理 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>
	
    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultViews">
			<list>
				<bean class="com.wisesoft.web.spring.MappingFastJsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"  p:autodetectAnnotations="true" />
					</property>
				</bean>
			</list>
		</property>
		<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="com.wisesoft.web.spring.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
				</bean>
			</list>
		</property>
	</bean>
	
	<!--WEB异常解析处理 -->
	<bean id="exceptionResolver" class="com.wisesoft.web.spring.HandlerExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">public/error</prop>
				<prop key="java.lang.Throwable">public/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/error">500</prop>
				<prop key="errors/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="public/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>

	<bean class="com.wisesoft.dubbo.spring.DependencyBeanPostProcessor" />
</beans>
